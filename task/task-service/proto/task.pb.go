// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package taskPackage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	XId                  string   `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Division             string   `protobuf:"bytes,2,opt,name=division,proto3" json:"division,omitempty"`
	EmployeeId           string   `protobuf:"bytes,3,opt,name=employeeId,proto3" json:"employeeId,omitempty"`
	ShiftId              string   `protobuf:"bytes,4,opt,name=shiftId,proto3" json:"shiftId,omitempty"`
	ManagerId            string   `protobuf:"bytes,5,opt,name=managerId,proto3" json:"managerId,omitempty"`
	AllocatedTimeMin     int64    `protobuf:"varint,6,opt,name=allocatedTimeMin,proto3" json:"allocatedTimeMin,omitempty"`
	SpecialRequests      string   `protobuf:"bytes,7,opt,name=specialRequests,proto3" json:"specialRequests,omitempty"`
	Completed            bool     `protobuf:"varint,8,opt,name=completed,proto3" json:"completed,omitempty"`
	RejectionReason      string   `protobuf:"bytes,9,opt,name=rejectionReason,proto3" json:"rejectionReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *Task) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *Task) GetEmployeeId() string {
	if m != nil {
		return m.EmployeeId
	}
	return ""
}

func (m *Task) GetShiftId() string {
	if m != nil {
		return m.ShiftId
	}
	return ""
}

func (m *Task) GetManagerId() string {
	if m != nil {
		return m.ManagerId
	}
	return ""
}

func (m *Task) GetAllocatedTimeMin() int64 {
	if m != nil {
		return m.AllocatedTimeMin
	}
	return 0
}

func (m *Task) GetSpecialRequests() string {
	if m != nil {
		return m.SpecialRequests
	}
	return ""
}

func (m *Task) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

func (m *Task) GetRejectionReason() string {
	if m != nil {
		return m.RejectionReason
	}
	return ""
}

type TaskRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskRequest) Reset()         { *m = TaskRequest{} }
func (m *TaskRequest) String() string { return proto.CompactTextString(m) }
func (*TaskRequest) ProtoMessage()    {}
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{1}
}

func (m *TaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRequest.Unmarshal(m, b)
}
func (m *TaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRequest.Marshal(b, m, deterministic)
}
func (m *TaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRequest.Merge(m, src)
}
func (m *TaskRequest) XXX_Size() int {
	return xxx_messageInfo_TaskRequest.Size(m)
}
func (m *TaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRequest proto.InternalMessageInfo

func (m *TaskRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AllTaskRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllTaskRequest) Reset()         { *m = AllTaskRequest{} }
func (m *AllTaskRequest) String() string { return proto.CompactTextString(m) }
func (*AllTaskRequest) ProtoMessage()    {}
func (*AllTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{2}
}

func (m *AllTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllTaskRequest.Unmarshal(m, b)
}
func (m *AllTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllTaskRequest.Marshal(b, m, deterministic)
}
func (m *AllTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllTaskRequest.Merge(m, src)
}
func (m *AllTaskRequest) XXX_Size() int {
	return xxx_messageInfo_AllTaskRequest.Size(m)
}
func (m *AllTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllTaskRequest proto.InternalMessageInfo

type ResponsePayload struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 *Task    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponsePayload) Reset()         { *m = ResponsePayload{} }
func (m *ResponsePayload) String() string { return proto.CompactTextString(m) }
func (*ResponsePayload) ProtoMessage()    {}
func (*ResponsePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{3}
}

func (m *ResponsePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePayload.Unmarshal(m, b)
}
func (m *ResponsePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePayload.Marshal(b, m, deterministic)
}
func (m *ResponsePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePayload.Merge(m, src)
}
func (m *ResponsePayload) XXX_Size() int {
	return xxx_messageInfo_ResponsePayload.Size(m)
}
func (m *ResponsePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePayload.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePayload proto.InternalMessageInfo

func (m *ResponsePayload) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResponsePayload) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type AllTaskResponsePayload struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 []*Task  `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllTaskResponsePayload) Reset()         { *m = AllTaskResponsePayload{} }
func (m *AllTaskResponsePayload) String() string { return proto.CompactTextString(m) }
func (*AllTaskResponsePayload) ProtoMessage()    {}
func (*AllTaskResponsePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{4}
}

func (m *AllTaskResponsePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllTaskResponsePayload.Unmarshal(m, b)
}
func (m *AllTaskResponsePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllTaskResponsePayload.Marshal(b, m, deterministic)
}
func (m *AllTaskResponsePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllTaskResponsePayload.Merge(m, src)
}
func (m *AllTaskResponsePayload) XXX_Size() int {
	return xxx_messageInfo_AllTaskResponsePayload.Size(m)
}
func (m *AllTaskResponsePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_AllTaskResponsePayload.DiscardUnknown(m)
}

var xxx_messageInfo_AllTaskResponsePayload proto.InternalMessageInfo

func (m *AllTaskResponsePayload) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AllTaskResponsePayload) GetData() []*Task {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "taskPackage.Task")
	proto.RegisterType((*TaskRequest)(nil), "taskPackage.TaskRequest")
	proto.RegisterType((*AllTaskRequest)(nil), "taskPackage.AllTaskRequest")
	proto.RegisterType((*ResponsePayload)(nil), "taskPackage.ResponsePayload")
	proto.RegisterType((*AllTaskResponsePayload)(nil), "taskPackage.AllTaskResponsePayload")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x4f, 0xcf, 0xd2, 0x40,
	0x10, 0xc6, 0x6d, 0xcb, 0xcb, 0x9f, 0x69, 0xf2, 0xf2, 0xba, 0x07, 0xb2, 0x41, 0x34, 0xa4, 0xc6,
	0xa4, 0xf1, 0xc0, 0x01, 0x3f, 0x00, 0x31, 0x1c, 0x48, 0x0f, 0x26, 0x58, 0x31, 0x1e, 0xcd, 0xd8,
	0x1d, 0x71, 0x65, 0xdb, 0xad, 0xdd, 0x85, 0x84, 0x4f, 0x64, 0xfc, 0x96, 0xa6, 0x0b, 0xf2, 0xa7,
	0x18, 0x8d, 0xde, 0x3a, 0xcf, 0xb3, 0xfb, 0x9b, 0x99, 0xa7, 0x2d, 0x80, 0x45, 0xb3, 0x99, 0x94,
	0x95, 0xb6, 0x9a, 0x85, 0xf5, 0xf3, 0x12, 0xb3, 0x0d, 0xae, 0x29, 0xfa, 0xe1, 0x43, 0x6b, 0x85,
	0x66, 0xc3, 0xfa, 0x10, 0x7c, 0x94, 0x82, 0x7b, 0x63, 0x2f, 0xee, 0xa5, 0x7e, 0x22, 0xd8, 0x10,
	0xba, 0x42, 0xee, 0xa4, 0x91, 0xba, 0xe0, 0xbe, 0x53, 0x4f, 0x35, 0x7b, 0x06, 0x40, 0x79, 0xa9,
	0xf4, 0x9e, 0x28, 0x11, 0x3c, 0x70, 0xee, 0x85, 0xc2, 0x38, 0x74, 0xcc, 0x17, 0xf9, 0xd9, 0x26,
	0x82, 0xb7, 0x9c, 0xf9, 0xab, 0x64, 0x23, 0xe8, 0xe5, 0x58, 0xe0, 0x9a, 0xaa, 0x44, 0xf0, 0x3b,
	0xe7, 0x9d, 0x05, 0xf6, 0x12, 0x1e, 0x50, 0x29, 0x9d, 0xa1, 0x25, 0xb1, 0x92, 0x39, 0xbd, 0x91,
	0x05, 0x6f, 0x8f, 0xbd, 0x38, 0x48, 0x6f, 0x74, 0x16, 0x43, 0xdf, 0x94, 0x94, 0x49, 0x54, 0x29,
	0x7d, 0xdb, 0x92, 0xb1, 0x86, 0x77, 0x1c, 0xaf, 0x29, 0xd7, 0x3d, 0x33, 0x9d, 0x97, 0x8a, 0x2c,
	0x09, 0xde, 0x1d, 0x7b, 0x71, 0x37, 0x3d, 0x0b, 0x35, 0xa7, 0xa2, 0xaf, 0x94, 0x59, 0xa9, 0x8b,
	0x94, 0xd0, 0xe8, 0x82, 0xf7, 0x0e, 0x9c, 0x86, 0x1c, 0x3d, 0x85, 0xb0, 0x8e, 0xea, 0xc8, 0x65,
	0xf7, 0xe0, 0x9f, 0x03, 0x93, 0x22, 0x7a, 0x80, 0xfb, 0xd7, 0x4a, 0x5d, 0x9c, 0x88, 0x96, 0xd0,
	0x4f, 0xc9, 0x94, 0xba, 0x30, 0xb4, 0xc4, 0xbd, 0xd2, 0x28, 0xd8, 0x00, 0xda, 0xc6, 0xa2, 0xdd,
	0x1a, 0x77, 0xf1, 0x2e, 0x3d, 0x56, 0xec, 0x05, 0xb4, 0x04, 0x5a, 0x74, 0x59, 0x86, 0xd3, 0xc7,
	0x93, 0x8b, 0x77, 0x34, 0x71, 0x48, 0x67, 0x47, 0x1f, 0x60, 0x70, 0xea, 0xf1, 0xaf, 0xe0, 0xe0,
	0x0f, 0xe0, 0xe9, 0x77, 0xff, 0xb0, 0xdc, 0x3b, 0xaa, 0x76, 0x32, 0x23, 0x36, 0x87, 0xce, 0x82,
	0xac, 0xfb, 0x32, 0xf8, 0xed, 0x9d, 0xc3, 0x7e, 0xc3, 0xd1, 0x95, 0xd3, 0x98, 0x28, 0x7a, 0xc4,
	0xde, 0x42, 0xb8, 0x20, 0x7b, 0x1c, 0xd8, 0xb0, 0x27, 0x57, 0xc7, 0xaf, 0xb3, 0x1a, 0x3e, 0xff,
	0xbd, 0xd9, 0x44, 0xce, 0x00, 0xe6, 0x15, 0xa1, 0x25, 0x37, 0xda, 0xed, 0x3a, 0x7f, 0x9d, 0x69,
	0x06, 0xf0, 0xbe, 0x14, 0xff, 0x0f, 0xf8, 0xd4, 0x76, 0x7f, 0xd1, 0xab, 0x9f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x5b, 0xe9, 0x3c, 0x38, 0x53, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	GetTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*ResponsePayload, error)
	GetAllTasks(ctx context.Context, in *AllTaskRequest, opts ...grpc.CallOption) (*AllTaskResponsePayload, error)
	CreateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*ResponsePayload, error)
	UpdateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*ResponsePayload, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) GetTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*ResponsePayload, error) {
	out := new(ResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetAllTasks(ctx context.Context, in *AllTaskRequest, opts ...grpc.CallOption) (*AllTaskResponsePayload, error) {
	out := new(AllTaskResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/GetAllTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) CreateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*ResponsePayload, error) {
	out := new(ResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*ResponsePayload, error) {
	out := new(ResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	GetTask(context.Context, *TaskRequest) (*ResponsePayload, error)
	GetAllTasks(context.Context, *AllTaskRequest) (*AllTaskResponsePayload, error)
	CreateTask(context.Context, *Task) (*ResponsePayload, error)
	UpdateTask(context.Context, *Task) (*ResponsePayload, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) GetTask(ctx context.Context, req *TaskRequest) (*ResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedTaskServiceServer) GetAllTasks(ctx context.Context, req *AllTaskRequest) (*AllTaskResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTasks not implemented")
}
func (*UnimplementedTaskServiceServer) CreateTask(ctx context.Context, req *Task) (*ResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedTaskServiceServer) UpdateTask(ctx context.Context, req *Task) (*ResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTask(ctx, req.(*TaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetAllTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetAllTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/GetAllTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetAllTasks(ctx, req.(*AllTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTask(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTask(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taskPackage.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTask",
			Handler:    _TaskService_GetTask_Handler,
		},
		{
			MethodName: "GetAllTasks",
			Handler:    _TaskService_GetAllTasks_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _TaskService_CreateTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _TaskService_UpdateTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task.proto",
}
