// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package taskPackage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Task
type Task struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Division             string   `protobuf:"bytes,2,opt,name=division,proto3" json:"division,omitempty"`
	EmployeeId           string   `protobuf:"bytes,3,opt,name=employeeId,proto3" json:"employeeId,omitempty"`
	ShiftId              string   `protobuf:"bytes,4,opt,name=shiftId,proto3" json:"shiftId,omitempty"`
	ManagerId            string   `protobuf:"bytes,5,opt,name=managerId,proto3" json:"managerId,omitempty"`
	AllocatedTimeMin     int32    `protobuf:"varint,6,opt,name=allocatedTimeMin,proto3" json:"allocatedTimeMin,omitempty"`
	SpecialRequests      string   `protobuf:"bytes,7,opt,name=specialRequests,proto3" json:"specialRequests,omitempty"`
	Completed            string   `protobuf:"bytes,8,opt,name=completed,proto3" json:"completed,omitempty"`
	RejectionReason      string   `protobuf:"bytes,9,opt,name=rejectionReason,proto3" json:"rejectionReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *Task) GetEmployeeId() string {
	if m != nil {
		return m.EmployeeId
	}
	return ""
}

func (m *Task) GetShiftId() string {
	if m != nil {
		return m.ShiftId
	}
	return ""
}

func (m *Task) GetManagerId() string {
	if m != nil {
		return m.ManagerId
	}
	return ""
}

func (m *Task) GetAllocatedTimeMin() int32 {
	if m != nil {
		return m.AllocatedTimeMin
	}
	return 0
}

func (m *Task) GetSpecialRequests() string {
	if m != nil {
		return m.SpecialRequests
	}
	return ""
}

func (m *Task) GetCompleted() string {
	if m != nil {
		return m.Completed
	}
	return ""
}

func (m *Task) GetRejectionReason() string {
	if m != nil {
		return m.RejectionReason
	}
	return ""
}

type TaskRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskRequest) Reset()         { *m = TaskRequest{} }
func (m *TaskRequest) String() string { return proto.CompactTextString(m) }
func (*TaskRequest) ProtoMessage()    {}
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{1}
}

func (m *TaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRequest.Unmarshal(m, b)
}
func (m *TaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRequest.Marshal(b, m, deterministic)
}
func (m *TaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRequest.Merge(m, src)
}
func (m *TaskRequest) XXX_Size() int {
	return xxx_messageInfo_TaskRequest.Size(m)
}
func (m *TaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRequest proto.InternalMessageInfo

func (m *TaskRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AllTaskRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllTaskRequest) Reset()         { *m = AllTaskRequest{} }
func (m *AllTaskRequest) String() string { return proto.CompactTextString(m) }
func (*AllTaskRequest) ProtoMessage()    {}
func (*AllTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{2}
}

func (m *AllTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllTaskRequest.Unmarshal(m, b)
}
func (m *AllTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllTaskRequest.Marshal(b, m, deterministic)
}
func (m *AllTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllTaskRequest.Merge(m, src)
}
func (m *AllTaskRequest) XXX_Size() int {
	return xxx_messageInfo_AllTaskRequest.Size(m)
}
func (m *AllTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllTaskRequest proto.InternalMessageInfo

type TaskResponsePayload struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 *Task    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskResponsePayload) Reset()         { *m = TaskResponsePayload{} }
func (m *TaskResponsePayload) String() string { return proto.CompactTextString(m) }
func (*TaskResponsePayload) ProtoMessage()    {}
func (*TaskResponsePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{3}
}

func (m *TaskResponsePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskResponsePayload.Unmarshal(m, b)
}
func (m *TaskResponsePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskResponsePayload.Marshal(b, m, deterministic)
}
func (m *TaskResponsePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskResponsePayload.Merge(m, src)
}
func (m *TaskResponsePayload) XXX_Size() int {
	return xxx_messageInfo_TaskResponsePayload.Size(m)
}
func (m *TaskResponsePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskResponsePayload.DiscardUnknown(m)
}

var xxx_messageInfo_TaskResponsePayload proto.InternalMessageInfo

func (m *TaskResponsePayload) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TaskResponsePayload) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type AllTaskResponsePayload struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 []*Task  `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllTaskResponsePayload) Reset()         { *m = AllTaskResponsePayload{} }
func (m *AllTaskResponsePayload) String() string { return proto.CompactTextString(m) }
func (*AllTaskResponsePayload) ProtoMessage()    {}
func (*AllTaskResponsePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{4}
}

func (m *AllTaskResponsePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllTaskResponsePayload.Unmarshal(m, b)
}
func (m *AllTaskResponsePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllTaskResponsePayload.Marshal(b, m, deterministic)
}
func (m *AllTaskResponsePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllTaskResponsePayload.Merge(m, src)
}
func (m *AllTaskResponsePayload) XXX_Size() int {
	return xxx_messageInfo_AllTaskResponsePayload.Size(m)
}
func (m *AllTaskResponsePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_AllTaskResponsePayload.DiscardUnknown(m)
}

var xxx_messageInfo_AllTaskResponsePayload proto.InternalMessageInfo

func (m *AllTaskResponsePayload) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AllTaskResponsePayload) GetData() []*Task {
	if m != nil {
		return m.Data
	}
	return nil
}

// Employee
type Employee struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Division             string   `protobuf:"bytes,2,opt,name=division,proto3" json:"division,omitempty"`
	NumberTasks          int32    `protobuf:"varint,3,opt,name=numberTasks,proto3" json:"numberTasks,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	BranchName           string   `protobuf:"bytes,5,opt,name=branchName,proto3" json:"branchName,omitempty"`
	Country              string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Position             string   `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`
	FirstName            string   `protobuf:"bytes,8,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,9,opt,name=lastName,proto3" json:"lastName,omitempty"`
	ShiftPreference      string   `protobuf:"bytes,10,opt,name=shiftPreference,proto3" json:"shiftPreference,omitempty"`
	Version              int32    `protobuf:"varint,11,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Employee) Reset()         { *m = Employee{} }
func (m *Employee) String() string { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()    {}
func (*Employee) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{5}
}

func (m *Employee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Employee.Unmarshal(m, b)
}
func (m *Employee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Employee.Marshal(b, m, deterministic)
}
func (m *Employee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Employee.Merge(m, src)
}
func (m *Employee) XXX_Size() int {
	return xxx_messageInfo_Employee.Size(m)
}
func (m *Employee) XXX_DiscardUnknown() {
	xxx_messageInfo_Employee.DiscardUnknown(m)
}

var xxx_messageInfo_Employee proto.InternalMessageInfo

func (m *Employee) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Employee) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *Employee) GetNumberTasks() int32 {
	if m != nil {
		return m.NumberTasks
	}
	return 0
}

func (m *Employee) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Employee) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *Employee) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Employee) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Employee) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Employee) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Employee) GetShiftPreference() string {
	if m != nil {
		return m.ShiftPreference
	}
	return ""
}

func (m *Employee) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type EmployeeResponsePayload struct {
	Status               int32     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 *Employee `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EmployeeResponsePayload) Reset()         { *m = EmployeeResponsePayload{} }
func (m *EmployeeResponsePayload) String() string { return proto.CompactTextString(m) }
func (*EmployeeResponsePayload) ProtoMessage()    {}
func (*EmployeeResponsePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{6}
}

func (m *EmployeeResponsePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmployeeResponsePayload.Unmarshal(m, b)
}
func (m *EmployeeResponsePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmployeeResponsePayload.Marshal(b, m, deterministic)
}
func (m *EmployeeResponsePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmployeeResponsePayload.Merge(m, src)
}
func (m *EmployeeResponsePayload) XXX_Size() int {
	return xxx_messageInfo_EmployeeResponsePayload.Size(m)
}
func (m *EmployeeResponsePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_EmployeeResponsePayload.DiscardUnknown(m)
}

var xxx_messageInfo_EmployeeResponsePayload proto.InternalMessageInfo

func (m *EmployeeResponsePayload) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *EmployeeResponsePayload) GetData() *Employee {
	if m != nil {
		return m.Data
	}
	return nil
}

type EmployeeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmployeeRequest) Reset()         { *m = EmployeeRequest{} }
func (m *EmployeeRequest) String() string { return proto.CompactTextString(m) }
func (*EmployeeRequest) ProtoMessage()    {}
func (*EmployeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{7}
}

func (m *EmployeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmployeeRequest.Unmarshal(m, b)
}
func (m *EmployeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmployeeRequest.Marshal(b, m, deterministic)
}
func (m *EmployeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmployeeRequest.Merge(m, src)
}
func (m *EmployeeRequest) XXX_Size() int {
	return xxx_messageInfo_EmployeeRequest.Size(m)
}
func (m *EmployeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmployeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmployeeRequest proto.InternalMessageInfo

func (m *EmployeeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AllEmployeeResponsePayload struct {
	Status               int32       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 []*Employee `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AllEmployeeResponsePayload) Reset()         { *m = AllEmployeeResponsePayload{} }
func (m *AllEmployeeResponsePayload) String() string { return proto.CompactTextString(m) }
func (*AllEmployeeResponsePayload) ProtoMessage()    {}
func (*AllEmployeeResponsePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{8}
}

func (m *AllEmployeeResponsePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllEmployeeResponsePayload.Unmarshal(m, b)
}
func (m *AllEmployeeResponsePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllEmployeeResponsePayload.Marshal(b, m, deterministic)
}
func (m *AllEmployeeResponsePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllEmployeeResponsePayload.Merge(m, src)
}
func (m *AllEmployeeResponsePayload) XXX_Size() int {
	return xxx_messageInfo_AllEmployeeResponsePayload.Size(m)
}
func (m *AllEmployeeResponsePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_AllEmployeeResponsePayload.DiscardUnknown(m)
}

var xxx_messageInfo_AllEmployeeResponsePayload proto.InternalMessageInfo

func (m *AllEmployeeResponsePayload) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AllEmployeeResponsePayload) GetData() []*Employee {
	if m != nil {
		return m.Data
	}
	return nil
}

type AllEmployeeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllEmployeeRequest) Reset()         { *m = AllEmployeeRequest{} }
func (m *AllEmployeeRequest) String() string { return proto.CompactTextString(m) }
func (*AllEmployeeRequest) ProtoMessage()    {}
func (*AllEmployeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{9}
}

func (m *AllEmployeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllEmployeeRequest.Unmarshal(m, b)
}
func (m *AllEmployeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllEmployeeRequest.Marshal(b, m, deterministic)
}
func (m *AllEmployeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllEmployeeRequest.Merge(m, src)
}
func (m *AllEmployeeRequest) XXX_Size() int {
	return xxx_messageInfo_AllEmployeeRequest.Size(m)
}
func (m *AllEmployeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllEmployeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllEmployeeRequest proto.InternalMessageInfo

// Shift
type Shift struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Division             string   `protobuf:"bytes,2,opt,name=division,proto3" json:"division,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Start                string   `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	End                  string   `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	Version              int32    `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	ShiftName            string   `protobuf:"bytes,7,opt,name=shiftName,proto3" json:"shiftName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shift) Reset()         { *m = Shift{} }
func (m *Shift) String() string { return proto.CompactTextString(m) }
func (*Shift) ProtoMessage()    {}
func (*Shift) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{10}
}

func (m *Shift) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shift.Unmarshal(m, b)
}
func (m *Shift) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shift.Marshal(b, m, deterministic)
}
func (m *Shift) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shift.Merge(m, src)
}
func (m *Shift) XXX_Size() int {
	return xxx_messageInfo_Shift.Size(m)
}
func (m *Shift) XXX_DiscardUnknown() {
	xxx_messageInfo_Shift.DiscardUnknown(m)
}

var xxx_messageInfo_Shift proto.InternalMessageInfo

func (m *Shift) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Shift) GetDivision() string {
	if m != nil {
		return m.Division
	}
	return ""
}

func (m *Shift) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Shift) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Shift) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *Shift) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Shift) GetShiftName() string {
	if m != nil {
		return m.ShiftName
	}
	return ""
}

type ShiftResponsePayload struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 *Shift   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiftResponsePayload) Reset()         { *m = ShiftResponsePayload{} }
func (m *ShiftResponsePayload) String() string { return proto.CompactTextString(m) }
func (*ShiftResponsePayload) ProtoMessage()    {}
func (*ShiftResponsePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{11}
}

func (m *ShiftResponsePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiftResponsePayload.Unmarshal(m, b)
}
func (m *ShiftResponsePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiftResponsePayload.Marshal(b, m, deterministic)
}
func (m *ShiftResponsePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiftResponsePayload.Merge(m, src)
}
func (m *ShiftResponsePayload) XXX_Size() int {
	return xxx_messageInfo_ShiftResponsePayload.Size(m)
}
func (m *ShiftResponsePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiftResponsePayload.DiscardUnknown(m)
}

var xxx_messageInfo_ShiftResponsePayload proto.InternalMessageInfo

func (m *ShiftResponsePayload) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ShiftResponsePayload) GetData() *Shift {
	if m != nil {
		return m.Data
	}
	return nil
}

type ShiftRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiftRequest) Reset()         { *m = ShiftRequest{} }
func (m *ShiftRequest) String() string { return proto.CompactTextString(m) }
func (*ShiftRequest) ProtoMessage()    {}
func (*ShiftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{12}
}

func (m *ShiftRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiftRequest.Unmarshal(m, b)
}
func (m *ShiftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiftRequest.Marshal(b, m, deterministic)
}
func (m *ShiftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiftRequest.Merge(m, src)
}
func (m *ShiftRequest) XXX_Size() int {
	return xxx_messageInfo_ShiftRequest.Size(m)
}
func (m *ShiftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShiftRequest proto.InternalMessageInfo

func (m *ShiftRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AllShiftResponsePayload struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 []*Shift `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllShiftResponsePayload) Reset()         { *m = AllShiftResponsePayload{} }
func (m *AllShiftResponsePayload) String() string { return proto.CompactTextString(m) }
func (*AllShiftResponsePayload) ProtoMessage()    {}
func (*AllShiftResponsePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{13}
}

func (m *AllShiftResponsePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllShiftResponsePayload.Unmarshal(m, b)
}
func (m *AllShiftResponsePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllShiftResponsePayload.Marshal(b, m, deterministic)
}
func (m *AllShiftResponsePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllShiftResponsePayload.Merge(m, src)
}
func (m *AllShiftResponsePayload) XXX_Size() int {
	return xxx_messageInfo_AllShiftResponsePayload.Size(m)
}
func (m *AllShiftResponsePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_AllShiftResponsePayload.DiscardUnknown(m)
}

var xxx_messageInfo_AllShiftResponsePayload proto.InternalMessageInfo

func (m *AllShiftResponsePayload) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AllShiftResponsePayload) GetData() []*Shift {
	if m != nil {
		return m.Data
	}
	return nil
}

type AllShiftRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllShiftRequest) Reset()         { *m = AllShiftRequest{} }
func (m *AllShiftRequest) String() string { return proto.CompactTextString(m) }
func (*AllShiftRequest) ProtoMessage()    {}
func (*AllShiftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{14}
}

func (m *AllShiftRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllShiftRequest.Unmarshal(m, b)
}
func (m *AllShiftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllShiftRequest.Marshal(b, m, deterministic)
}
func (m *AllShiftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllShiftRequest.Merge(m, src)
}
func (m *AllShiftRequest) XXX_Size() int {
	return xxx_messageInfo_AllShiftRequest.Size(m)
}
func (m *AllShiftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllShiftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllShiftRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Task)(nil), "taskPackage.Task")
	proto.RegisterType((*TaskRequest)(nil), "taskPackage.TaskRequest")
	proto.RegisterType((*AllTaskRequest)(nil), "taskPackage.AllTaskRequest")
	proto.RegisterType((*TaskResponsePayload)(nil), "taskPackage.TaskResponsePayload")
	proto.RegisterType((*AllTaskResponsePayload)(nil), "taskPackage.AllTaskResponsePayload")
	proto.RegisterType((*Employee)(nil), "taskPackage.Employee")
	proto.RegisterType((*EmployeeResponsePayload)(nil), "taskPackage.EmployeeResponsePayload")
	proto.RegisterType((*EmployeeRequest)(nil), "taskPackage.EmployeeRequest")
	proto.RegisterType((*AllEmployeeResponsePayload)(nil), "taskPackage.AllEmployeeResponsePayload")
	proto.RegisterType((*AllEmployeeRequest)(nil), "taskPackage.AllEmployeeRequest")
	proto.RegisterType((*Shift)(nil), "taskPackage.Shift")
	proto.RegisterType((*ShiftResponsePayload)(nil), "taskPackage.ShiftResponsePayload")
	proto.RegisterType((*ShiftRequest)(nil), "taskPackage.ShiftRequest")
	proto.RegisterType((*AllShiftResponsePayload)(nil), "taskPackage.AllShiftResponsePayload")
	proto.RegisterType((*AllShiftRequest)(nil), "taskPackage.AllShiftRequest")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 746 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xed, 0x52, 0xd3, 0x40,
	0x14, 0xa5, 0x9f, 0xb4, 0x37, 0x0c, 0x85, 0x15, 0x21, 0x56, 0xc4, 0x12, 0xbf, 0xd0, 0x1f, 0xfc,
	0xc0, 0x27, 0x60, 0x50, 0x3a, 0x38, 0xa3, 0x83, 0xa5, 0xea, 0x38, 0xa3, 0xe3, 0x2c, 0xc9, 0x05,
	0x22, 0xdb, 0x24, 0x66, 0xb7, 0xcc, 0xf4, 0x89, 0xf4, 0x39, 0x7c, 0x17, 0xdf, 0xc3, 0xd9, 0x8f,
	0xa4, 0x4d, 0x1a, 0xb0, 0x80, 0xff, 0x72, 0xef, 0xcd, 0x9e, 0x7b, 0x73, 0xce, 0xd9, 0xdb, 0x02,
	0x08, 0xca, 0xcf, 0xb7, 0xa3, 0x38, 0x14, 0x21, 0xb1, 0xe4, 0xf3, 0x21, 0x75, 0xcf, 0xe9, 0x29,
	0x3a, 0xbf, 0xca, 0x50, 0xed, 0x53, 0x7e, 0x4e, 0x16, 0xa1, 0xec, 0x7b, 0x76, 0xa9, 0x53, 0xda,
	0x6a, 0xf6, 0xca, 0xbe, 0x47, 0xda, 0xd0, 0xf0, 0xfc, 0x0b, 0x9f, 0xfb, 0x61, 0x60, 0x97, 0x55,
	0x36, 0x8d, 0xc9, 0x06, 0x00, 0x0e, 0x22, 0x16, 0x8e, 0x10, 0x0f, 0x3c, 0xbb, 0xa2, 0xaa, 0x13,
	0x19, 0x62, 0xc3, 0x3c, 0x3f, 0xf3, 0x4f, 0xc4, 0x81, 0x67, 0x57, 0x55, 0x31, 0x09, 0xc9, 0x3a,
	0x34, 0x07, 0x34, 0xa0, 0xa7, 0x18, 0x1f, 0x78, 0x76, 0x4d, 0xd5, 0xc6, 0x09, 0xf2, 0x02, 0x96,
	0x28, 0x63, 0xa1, 0x4b, 0x05, 0x7a, 0x7d, 0x7f, 0x80, 0x6f, 0xfd, 0xc0, 0xae, 0x77, 0x4a, 0x5b,
	0xb5, 0xde, 0x54, 0x9e, 0x6c, 0x41, 0x8b, 0x47, 0xe8, 0xfa, 0x94, 0xf5, 0xf0, 0xc7, 0x10, 0xb9,
	0xe0, 0xf6, 0xbc, 0xc2, 0xcb, 0xa7, 0x65, 0x4f, 0x37, 0x1c, 0x44, 0x0c, 0x05, 0x7a, 0x76, 0x43,
	0xf7, 0x4c, 0x13, 0x12, 0x27, 0xc6, 0xef, 0xe8, 0x0a, 0x3f, 0x0c, 0x7a, 0x48, 0x79, 0x18, 0xd8,
	0x4d, 0x8d, 0x93, 0x4b, 0x3b, 0x0f, 0xc0, 0x92, 0x4c, 0x19, 0xdc, 0x3c, 0x61, 0xce, 0x12, 0x2c,
	0xee, 0x32, 0x36, 0xf1, 0x86, 0xd3, 0x87, 0x3b, 0x3a, 0xe4, 0x51, 0x18, 0x70, 0x3c, 0xa4, 0x23,
	0x16, 0x52, 0x8f, 0xac, 0x42, 0x9d, 0x0b, 0x2a, 0x86, 0x5c, 0x1d, 0xae, 0xf5, 0x4c, 0x44, 0x9e,
	0x40, 0xd5, 0xa3, 0x82, 0x2a, 0xb6, 0xad, 0x9d, 0xe5, 0xed, 0x09, 0x99, 0xb6, 0x15, 0x8e, 0x2a,
	0x3b, 0x9f, 0x60, 0x35, 0xed, 0x73, 0x5d, 0xe0, 0xca, 0x55, 0xc0, 0xbf, 0xcb, 0xd0, 0x78, 0x6d,
	0x44, 0xbc, 0x96, 0x1d, 0x3a, 0x60, 0x05, 0xc3, 0xc1, 0x31, 0xc6, 0x12, 0x8c, 0x2b, 0x3f, 0xd4,
	0x7a, 0x93, 0x29, 0xb2, 0x02, 0x35, 0x1c, 0x50, 0x9f, 0x19, 0x3b, 0xe8, 0x40, 0xda, 0xe8, 0x38,
	0xa6, 0x81, 0x7b, 0xf6, 0x8e, 0x0e, 0xd0, 0xb8, 0x61, 0x22, 0x23, 0x6d, 0xe4, 0x86, 0xc3, 0x40,
	0xc4, 0x23, 0xe5, 0x82, 0x66, 0x2f, 0x09, 0xe5, 0x34, 0x51, 0xc8, 0x7d, 0x29, 0x8e, 0x51, 0x3d,
	0x8d, 0xa5, 0xdc, 0x27, 0x7e, 0xcc, 0x85, 0x02, 0x35, 0x72, 0xa7, 0x09, 0x79, 0x92, 0x51, 0x53,
	0xd4, 0x3a, 0xa7, 0xb1, 0xb2, 0x94, 0xf4, 0xe9, 0x61, 0x8c, 0x27, 0x18, 0x63, 0xe0, 0xa2, 0x0d,
	0xc6, 0x52, 0xd9, 0xb4, 0x9c, 0xec, 0x02, 0x63, 0x45, 0x86, 0xa5, 0xbe, 0x36, 0x09, 0x9d, 0x2f,
	0xb0, 0x96, 0x70, 0x38, 0xab, 0x3c, 0xcf, 0x33, 0xba, 0xdf, 0xcd, 0xc8, 0x93, 0x62, 0x69, 0x89,
	0x36, 0xa1, 0x35, 0x46, 0x2f, 0xb6, 0xe1, 0x37, 0x68, 0xef, 0x32, 0x76, 0xf3, 0x19, 0x2a, 0xff,
	0x9a, 0x61, 0x05, 0x48, 0xa6, 0x81, 0xf6, 0xfa, 0xcf, 0x12, 0xd4, 0x8e, 0x24, 0x4b, 0xd7, 0x72,
	0x0e, 0x81, 0xaa, 0x18, 0x45, 0x68, 0x56, 0x88, 0x7a, 0x96, 0x5e, 0xe1, 0x82, 0xc6, 0x22, 0xf1,
	0x8a, 0x0a, 0xc8, 0x12, 0x54, 0x30, 0x48, 0x56, 0x86, 0x7c, 0x9c, 0xd4, 0xa0, 0x9e, 0xd1, 0x40,
	0x3a, 0x40, 0x09, 0xa6, 0x44, 0xd6, 0xf6, 0x18, 0x27, 0x9c, 0x8f, 0xb0, 0xa2, 0x06, 0x9d, 0x95,
	0x9a, 0xa7, 0x19, 0x79, 0x48, 0x86, 0x1a, 0x0d, 0xa4, 0x79, 0xd9, 0x80, 0x05, 0x83, 0x5b, 0x2c,
	0xcc, 0x67, 0x58, 0xdb, 0x65, 0xec, 0x86, 0xad, 0x2b, 0x57, 0xb6, 0x5e, 0x86, 0xd6, 0x18, 0x5a,
	0x75, 0xdf, 0xf9, 0x53, 0xd7, 0xdb, 0xea, 0x08, 0xe3, 0x0b, 0xdf, 0x45, 0xd2, 0x85, 0xf9, 0x2e,
	0x0a, 0xb5, 0xe9, 0xed, 0xe9, 0x05, 0xa0, 0x0f, 0xb5, 0x3b, 0x05, 0x95, 0xcc, 0xa4, 0xce, 0x1c,
	0x79, 0x0f, 0x56, 0x17, 0x85, 0xd9, 0x40, 0x9c, 0xdc, 0xcf, 0x1c, 0xc9, 0x2e, 0xc0, 0xf6, 0xa3,
	0xe2, 0x62, 0x1e, 0x72, 0x0f, 0x60, 0x2f, 0x46, 0x2a, 0x50, 0x8d, 0x37, 0xbd, 0x9f, 0x66, 0x9a,
	0x6b, 0x0f, 0xe0, 0x43, 0xe4, 0xdd, 0x12, 0xe4, 0x0d, 0xc0, 0x2b, 0x94, 0xbf, 0x0b, 0xff, 0x81,
	0xa8, 0x23, 0x45, 0x54, 0xba, 0x50, 0xd7, 0x8b, 0xef, 0x94, 0x01, 0x7c, 0x7c, 0x49, 0x35, 0x0f,
	0xfa, 0x15, 0x5a, 0x9a, 0xfd, 0xe4, 0x15, 0x4e, 0x1e, 0xe6, 0x49, 0xce, 0x63, 0x3f, 0xbb, 0xfc,
	0x85, 0xe9, 0xef, 0x6f, 0x74, 0x51, 0xe8, 0x7b, 0x7c, 0xaf, 0xc0, 0x6e, 0x06, 0x71, 0xb3, 0xa8,
	0x94, 0xc7, 0xea, 0xc3, 0x82, 0x1e, 0x55, 0xd5, 0x79, 0x8e, 0x80, 0x9c, 0x5f, 0x73, 0x04, 0x5c,
	0x72, 0x51, 0x9c, 0x39, 0xb2, 0x0f, 0x96, 0xf6, 0x8a, 0x1e, 0xb2, 0xe0, 0x4e, 0xcc, 0x36, 0xdd,
	0x3e, 0x58, 0xda, 0x2e, 0xb7, 0xc3, 0x39, 0xae, 0xab, 0xff, 0x54, 0x2f, 0xff, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x4b, 0x1b, 0x9e, 0xed, 0x61, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	GetTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskResponsePayload, error)
	GetAllTasks(ctx context.Context, in *AllTaskRequest, opts ...grpc.CallOption) (*AllTaskResponsePayload, error)
	CreateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*TaskResponsePayload, error)
	UpdateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*TaskResponsePayload, error)
	DeleteTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskResponsePayload, error)
	GetEmployee(ctx context.Context, in *EmployeeRequest, opts ...grpc.CallOption) (*EmployeeResponsePayload, error)
	GetAllEmployees(ctx context.Context, in *AllEmployeeRequest, opts ...grpc.CallOption) (*AllEmployeeResponsePayload, error)
	GetShift(ctx context.Context, in *ShiftRequest, opts ...grpc.CallOption) (*ShiftResponsePayload, error)
	GetAllShifts(ctx context.Context, in *AllShiftRequest, opts ...grpc.CallOption) (*AllShiftResponsePayload, error)
	CreateShift(ctx context.Context, in *Shift, opts ...grpc.CallOption) (*ShiftResponsePayload, error)
	UpdateShift(ctx context.Context, in *Shift, opts ...grpc.CallOption) (*ShiftResponsePayload, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) GetTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskResponsePayload, error) {
	out := new(TaskResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetAllTasks(ctx context.Context, in *AllTaskRequest, opts ...grpc.CallOption) (*AllTaskResponsePayload, error) {
	out := new(AllTaskResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/GetAllTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) CreateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*TaskResponsePayload, error) {
	out := new(TaskResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*TaskResponsePayload, error) {
	out := new(TaskResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) DeleteTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskResponsePayload, error) {
	out := new(TaskResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetEmployee(ctx context.Context, in *EmployeeRequest, opts ...grpc.CallOption) (*EmployeeResponsePayload, error) {
	out := new(EmployeeResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/GetEmployee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetAllEmployees(ctx context.Context, in *AllEmployeeRequest, opts ...grpc.CallOption) (*AllEmployeeResponsePayload, error) {
	out := new(AllEmployeeResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/GetAllEmployees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetShift(ctx context.Context, in *ShiftRequest, opts ...grpc.CallOption) (*ShiftResponsePayload, error) {
	out := new(ShiftResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/GetShift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetAllShifts(ctx context.Context, in *AllShiftRequest, opts ...grpc.CallOption) (*AllShiftResponsePayload, error) {
	out := new(AllShiftResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/GetAllShifts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) CreateShift(ctx context.Context, in *Shift, opts ...grpc.CallOption) (*ShiftResponsePayload, error) {
	out := new(ShiftResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/CreateShift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateShift(ctx context.Context, in *Shift, opts ...grpc.CallOption) (*ShiftResponsePayload, error) {
	out := new(ShiftResponsePayload)
	err := c.cc.Invoke(ctx, "/taskPackage.TaskService/UpdateShift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	GetTask(context.Context, *TaskRequest) (*TaskResponsePayload, error)
	GetAllTasks(context.Context, *AllTaskRequest) (*AllTaskResponsePayload, error)
	CreateTask(context.Context, *Task) (*TaskResponsePayload, error)
	UpdateTask(context.Context, *Task) (*TaskResponsePayload, error)
	DeleteTask(context.Context, *TaskRequest) (*TaskResponsePayload, error)
	GetEmployee(context.Context, *EmployeeRequest) (*EmployeeResponsePayload, error)
	GetAllEmployees(context.Context, *AllEmployeeRequest) (*AllEmployeeResponsePayload, error)
	GetShift(context.Context, *ShiftRequest) (*ShiftResponsePayload, error)
	GetAllShifts(context.Context, *AllShiftRequest) (*AllShiftResponsePayload, error)
	CreateShift(context.Context, *Shift) (*ShiftResponsePayload, error)
	UpdateShift(context.Context, *Shift) (*ShiftResponsePayload, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) GetTask(ctx context.Context, req *TaskRequest) (*TaskResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedTaskServiceServer) GetAllTasks(ctx context.Context, req *AllTaskRequest) (*AllTaskResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTasks not implemented")
}
func (*UnimplementedTaskServiceServer) CreateTask(ctx context.Context, req *Task) (*TaskResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedTaskServiceServer) UpdateTask(ctx context.Context, req *Task) (*TaskResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}
func (*UnimplementedTaskServiceServer) DeleteTask(ctx context.Context, req *TaskRequest) (*TaskResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedTaskServiceServer) GetEmployee(ctx context.Context, req *EmployeeRequest) (*EmployeeResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEmployee not implemented")
}
func (*UnimplementedTaskServiceServer) GetAllEmployees(ctx context.Context, req *AllEmployeeRequest) (*AllEmployeeResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllEmployees not implemented")
}
func (*UnimplementedTaskServiceServer) GetShift(ctx context.Context, req *ShiftRequest) (*ShiftResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShift not implemented")
}
func (*UnimplementedTaskServiceServer) GetAllShifts(ctx context.Context, req *AllShiftRequest) (*AllShiftResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllShifts not implemented")
}
func (*UnimplementedTaskServiceServer) CreateShift(ctx context.Context, req *Shift) (*ShiftResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShift not implemented")
}
func (*UnimplementedTaskServiceServer) UpdateShift(ctx context.Context, req *Shift) (*ShiftResponsePayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateShift not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTask(ctx, req.(*TaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetAllTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetAllTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/GetAllTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetAllTasks(ctx, req.(*AllTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTask(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTask(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).DeleteTask(ctx, req.(*TaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetEmployee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmployeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetEmployee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/GetEmployee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetEmployee(ctx, req.(*EmployeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetAllEmployees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllEmployeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetAllEmployees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/GetAllEmployees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetAllEmployees(ctx, req.(*AllEmployeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetShift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShiftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetShift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/GetShift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetShift(ctx, req.(*ShiftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetAllShifts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllShiftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetAllShifts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/GetAllShifts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetAllShifts(ctx, req.(*AllShiftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_CreateShift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Shift)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateShift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/CreateShift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateShift(ctx, req.(*Shift))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateShift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Shift)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateShift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskPackage.TaskService/UpdateShift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateShift(ctx, req.(*Shift))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taskPackage.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTask",
			Handler:    _TaskService_GetTask_Handler,
		},
		{
			MethodName: "GetAllTasks",
			Handler:    _TaskService_GetAllTasks_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _TaskService_CreateTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _TaskService_UpdateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _TaskService_DeleteTask_Handler,
		},
		{
			MethodName: "GetEmployee",
			Handler:    _TaskService_GetEmployee_Handler,
		},
		{
			MethodName: "GetAllEmployees",
			Handler:    _TaskService_GetAllEmployees_Handler,
		},
		{
			MethodName: "GetShift",
			Handler:    _TaskService_GetShift_Handler,
		},
		{
			MethodName: "GetAllShifts",
			Handler:    _TaskService_GetAllShifts_Handler,
		},
		{
			MethodName: "CreateShift",
			Handler:    _TaskService_CreateShift_Handler,
		},
		{
			MethodName: "UpdateShift",
			Handler:    _TaskService_UpdateShift_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task.proto",
}
